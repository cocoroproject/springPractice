<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	<!-- <bean id="MessageService" class="kosta.service.MessageService"></bean> 
		<bean id="helloController" class="kosta.controller.HelloController"> <constructor-arg 
		ref="MessageService"></constructor-arg> </bean> <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/view/"/> <property name="suffix" value=".jsp"/> 
		</bean> -->

	<mvc:annotation-driven />
	<mvc:default-servlet-handler />

	<!-- scan 으로 객체를 생성하면 한번에 객체를 다 생성할 수 있다 -->
	<context:annotation-config />
	<context:component-scan base-package="kosta" />


	<!-- Transaction Setting -->
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>



	<!-- Aop Setting -->
	
	<bean id="sessionAspect" class="kosta.aspect.SessionAspect"></bean>
		<!-- proxy 생성 -->
		<aop:aspectj-autoproxy/>
		<aop:config proxy-target-class="true"/>
		
	<!-- Tiles Setting -->

	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles2def.xml</value>
			</list>
		</property>
	</bean>

	<bean id="viewResolver2" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
		<property name="order" value="1"/>
	</bean>

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="2"/>
	</bean>

	<!--DB Setting -->
	<!-- jdbcTemplate 객체 얻어오기 -->
	<!-- <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
		<property name="dataSource" ref="dataSource"/> </bean> -->

	<!-- mabatis sqlSessionTemplate 만들기 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSession" />
	</bean>

	<!-- sqlSession 객체 얻어오기 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="/WEB-INF/mybatis-config.xml" />
	</bean>

	<!-- datasource 얻어오기 -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/oracle" />
		<property name="resourceRef" value="true" />
	</bean>



	<!-- <bean id="BoardController" class="kosta.controller.BoardController"> 
		<property name="dao" ref="boardDao"></property> </bean> <bean id="boardDao" 
		class="kosta.model.BoardDao"></bean> -->

</beans>
